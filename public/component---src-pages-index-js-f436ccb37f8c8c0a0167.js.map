{"version":3,"file":"component---src-pages-index-js-f436ccb37f8c8c0a0167.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\">\n      {author?.name && (\n        <p>\n          {author?.summary || null}\n          {` `}\n\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header = (\n    <h1 className=\"main-heading\">\n      <Link to=\"/\">{title}</Link>\n    </h1>\n  ) \n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        <a href=\"https://jundolee.github.io\">jun</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const allCategories = (data.allMarkdownRemark.distinct || []).map(cat => cat);\n  const [selectedCategory, setSelectedCategory] = React.useState(pageContext.category)\n\n  const handleAllButtonClick = () => {\n    setSelectedCategory(null);\n  };\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <div className=\"cat_nav\">\n        <p\n          style={{ fontWeight: !selectedCategory ? 'bold' : 'normal' }}\n          onClick={handleAllButtonClick}\n        >\n          <Link to=\"/\">All</Link>\n        </p>\n        {allCategories.map(cat => (\n          <p\n            style={{ fontWeight: selectedCategory === cat ? 'bold' : 'normal' }}\n            onClick={() => setSelectedCategory(cat)}\n          >\n            <Link to={`/${cat}/`}>{cat}</Link>\n          </p>\n        ))}\n      </div>\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <Link to={post.fields.slug} itemProp=\"url\">\n                  <header>\n                    <h2>               \n                      <span itemProp=\"headline\">{title}</span> \n                    </h2>\n                    <small>{post.frontmatter.date}</small>\n                  </header>\n                  <section>\n                   <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.excerpt\n                     }}\n                     itemProp=\"excerpt\"\n                   />\n                  </section>\n                </Link>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { category: { ne: null } } }\n    ) {\n      distinct(field: frontmatter___category)\n      nodes {\n        excerpt(pruneLength: 150, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          category\n        }\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","site","siteMetadata","className","name","summary","location","title","children","isRootPath","pathname","header","Link","to","href","description","metaDescription","defaultTitle","content","property","social","twitter","data","pageContext","siteTitle","posts","allMarkdownRemark","nodes","allCategories","distinct","map","cat","selectedCategory","setSelectedCategory","React","category","length","style","fontWeight","onClick","listStyle","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","excerpt","Head"],"sourceRoot":""}