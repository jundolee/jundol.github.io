{"version":3,"file":"component---src-templates-category-posts-js-73433de4728227f299b7.js","mappings":"uJA2CA,IAjCY,KAAO,IAAD,EAChB,MAiBMA,EAA+B,QAAzB,GAjBCC,EAAAA,EAAAA,gBAAe,cAiBRC,KAAKC,oBAAY,aAAtB,EAAwBH,OAEvC,OACE,uBAAKI,UAAU,QACZJ,aAAM,EAANA,EAAQK,OACP,0BACGL,aAAM,EAANA,EAAQM,UAAW,KAAI,KAKxB,C,+CChBV,IApBe,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EACF,sBAAIR,UAAU,gBACZ,gBAAC,EAAAS,KAAI,CAACC,GAAG,KAAKN,IAIlB,OACE,uBAAKJ,UAAU,iBAAiB,oBAAmBM,GACjD,0BAAQN,UAAU,iBAAiBQ,GACnC,4BAAOH,GACP,8BACE,qBAAGM,KAAK,8BAA6B,QAEnC,C,yECkEV,UA/EqB,IAAsC,IAAD,MAApC,KAAEC,EAAI,SAAET,EAAQ,YAAEU,GAAa,EACnD,MAAMC,GAAkC,QAAtB,EAAAF,EAAKd,KAAKC,oBAAY,aAAtB,EAAwBK,QAAK,QACzCW,EAAQH,EAAKI,kBAAkBC,MAC/BC,EAAgBN,EAAKI,kBAAkBG,SAASC,KAAIC,GAAOA,KAC1DC,EAAkBC,GAAuBC,EAAAA,SAAeX,EAAYY,UAO3E,OAAqB,IAAjBV,EAAMW,OAEN,gBAAC,IAAM,CAACvB,SAAUA,EAAUC,MAAOU,GACjC,gBAAC,IAAG,MACJ,yBAAG,0DAQP,gBAAC,IAAM,CAACX,SAAUA,EAAUC,MAAOU,GACjC,gBAAC,IAAG,MACJ,uBAAKd,UAAU,WACb,qBACE2B,MAAO,CAAEC,WAAaN,EAA4B,SAAT,QACzCO,QAtBqB,KAC3BN,EAAoB,KAAK,GAuBnB,gBAAC,EAAAd,KAAI,CAACC,GAAG,KAAI,QAEdQ,EAAcE,KAAIC,GACjB,qBACEM,MAAO,CAAEC,WAAYN,IAAqBD,EAAM,OAAS,UACzDQ,QAAS,IAAMN,EAAoBF,IAEnC,gBAAC,EAAAZ,KAAI,CAACC,GAAE,IAAMW,EAAG,KAAMA,OAI7B,sBAAIM,MAAO,CAAEG,UAAU,SACpBf,EACEgB,QAAOC,IAASV,GAAoBU,EAAKC,YAAYR,WAAaH,IAClEF,KAAIY,IACH,MAAM5B,EAAQ4B,EAAKC,YAAY7B,OAAS4B,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEnC,UAAU,iBACVqC,WAAS,EACTC,SAAS,6BAET,gBAAC,EAAA7B,KAAI,CAACC,GAAIsB,EAAKE,OAAOC,KAAMI,SAAS,OACnC,8BACE,0BACE,wBAAMA,SAAS,YAAYnC,IAE7B,6BAAQ4B,EAAKC,YAAYO,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQV,EAAKW,SAEfJ,SAAS,eAKd,KAIN,C","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/templates/category-posts.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\">\n      {author?.name && (\n        <p>\n          {author?.summary || null}\n          {` `}\n\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header = (\n    <h1 className=\"main-heading\">\n      <Link to=\"/\">{title}</Link>\n    </h1>\n  ) \n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        <a href=\"https://jundolee.github.io\">jun</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\n\nconst CategoryPost = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const allCategories = data.allMarkdownRemark.distinct.map(cat => cat)\n  const [selectedCategory, setSelectedCategory] = React.useState(pageContext.category)\n\n  const handleAllButtonClick = () => {\n    setSelectedCategory(null);\n  };\n\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          블로그 포스트를 찾을 수 없습니다. \"context/blog\"에 마크다운 포스트를 추가하십시오.\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <div className=\"cat_nav\">\n        <p\n          style={{ fontWeight: !selectedCategory ? 'bold' : 'normal' }}\n          onClick={handleAllButtonClick}\n        >\n          <Link to=\"/\">All</Link>\n        </p>\n        {allCategories.map(cat => (\n          <p\n            style={{ fontWeight: selectedCategory === cat ? 'bold' : 'normal' }}\n            onClick={() => setSelectedCategory(cat)}\n          >\n            <Link to={`/${cat}/`}>{cat}</Link>\n          </p>\n        ))}\n      </div>\n      <ol style={{ listStyle: `none` }}>\n        {posts\n          .filter(post => !selectedCategory || post.frontmatter.category === selectedCategory)\n          .map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n              <li key={post.fields.slug}>\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <Link to={post.fields.slug} itemProp=\"url\">\n                    <header>\n                      <h2>\n                        <span itemProp=\"headline\">{title}</span>\n                      </h2>\n                      <small>{post.frontmatter.date}</small>\n                    </header>\n                    <section>\n                      <p\n                        dangerouslySetInnerHTML={{\n                          __html: post.excerpt,\n                        }}\n                        itemProp=\"excerpt\"\n                      />\n                    </section>\n                  </Link>\n                </article>\n              </li>\n            )\n          })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default CategoryPost\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { category: { ne: null } } }\n    ) {\n      distinct(field: {frontmatter: {category: SELECT}})\n      nodes {\n        excerpt(pruneLength: 150, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          category\n        }\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","site","siteMetadata","className","name","summary","location","title","children","isRootPath","pathname","header","Link","to","href","data","pageContext","siteTitle","posts","allMarkdownRemark","nodes","allCategories","distinct","map","cat","selectedCategory","setSelectedCategory","React","category","length","style","fontWeight","onClick","listStyle","filter","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}