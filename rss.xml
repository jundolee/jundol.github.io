<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Gatsby Starter Blog RSS Feed]]></title><description><![CDATA[모든 것을 위해 쓰는 블로그]]></description><link>https://jundolee.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Tue, 04 Jun 2024 15:52:42 GMT</lastBuildDate><item><title><![CDATA[지워지지 않는 투두리스트]]></title><description><![CDATA[모든 해야 할 일, 사야 할 것, 봐야 할 것 모두 오늘 할 일에 들어있다. 일단 박스 안에 담아둔다. 무려 반 년 전에 적어놓았던 23년 회고록 쓰기도 그 리스트 중에 하나다. 한 때 어렴풋이 보고, 내 일상에 적용하려고 했던 GTD…]]></description><link>https://jundolee.github.io/Todolist/</link><guid isPermaLink="false">https://jundolee.github.io/Todolist/</guid><pubDate>Sat, 01 Jun 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;모든 해야 할 일, 사야 할 것, 봐야 할 것 모두 오늘 할 일에 들어있다. 일단 박스 안에 담아둔다. 무려 반 년 전에 적어놓았던 23년 회고록 쓰기도 그 리스트 중에 하나다. 한 때 어렴풋이 보고, 내 일상에 적용하려고 했던 GTD 기법이나, 쓰지도 않으면서 몇 개나 구매했던 생산성 앱들은 이제는 쳐다보지도 않는다. 왜 이렇게 계속해서 실패할까 고민도 해봤지만, 마치 그 고민마저도 투두리스트처럼 이내 까먹게 된다.&lt;/p&gt;
&lt;p&gt;원래는 일이 쌓여있으면 스트레스를 받는 것처럼 투두리스트도 쌓여있으면 스트레스를 받아야 되는 것이 당연한데, 이상하게도 그렇게 스트레스를 받지 않는다. 왜냐하면, 적힌 할 일에는 강제성이 없기 때문이다. 기한도 정해져 놓지 않은 일들이 대부분이고, 안 해도 될 일들도 많고, 마지막으로 정리하지 않기 때문이다. 그러니, 몇 일이 지나도 리스트는 변화가 없고, 그러다 몇 주가 지나고 앱이나 리스트에 들어가지도 않게 된다.&lt;/p&gt;
&lt;p&gt;일을 관리하는 것은 적어놓는 것이 중요한 것이 아님을 새삼 깨닫는다. 일을 관리하는 것도 마찬가지다. 모든 것은 작은 일이 모여서 커다란 일이 되는 것이고, 투두도 마찬가지다. 큰 일을 이뤄내기 위해서는 작은 일을 돌볼 줄 알아야 한다. 하루에 한 번, 일주일에 한 번, 한 달에 한 번, 계속해서 돌아봐야 한다. 리스트를 둘러보고, 정리하고, 기한을 재설정하고, 중요한 내용을 기입하고, 반복해야만 한다. 그래야지만 리스트가 제대로 작동한다.&lt;/p&gt;
&lt;p&gt;우리는 종종 착각한다. 내가 쓰는 앱이 문제야. 내가 할 일이 없어서, 리스트에 쓸 게 없어. 굳이 리스트로 관리할 필요가 있어? 앱 자체에는 문제가 없다. 중요한 것은 마음가짐이다. 얼마나 우리가 할 일을 신경 쓰는지, 몰입하는지가 중요한 것이다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[기획 방법론]]></title><description><![CDATA[사업팀은 제품을 빨리 출시하고 싶은 반면. 개발팀은 기존의 업무도 산더미처럼 쌓여있다. 1. 일정관리 복수의 과제들 중 우선순위를 선정하여, 2) 조직 자원을 효율적으로 투입하는 행위…]]></description><link>https://jundolee.github.io/Planning/</link><guid isPermaLink="false">https://jundolee.github.io/Planning/</guid><pubDate>Sun, 19 May 2024 00:00:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;사업팀은 제품을 빨리 출시하고 싶은 반면. 개발팀은 기존의 업무도 산더미처럼 쌓여있다.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;1. 일정관리&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;복수의 과제들 중 우선순위를 선정하여, 2) 조직 자원을 효율적으로 투입하는 행위&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;2. 일정관리 이유&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;일정 관리는 모든 과제를 빨리빨리한다는 의미가 아니다.&lt;/li&gt;
&lt;li&gt;가용 자원을 프로젝트별 임팩트를 고려하여 우선순위를 정하고, 적절하게 배분하는 것이 핵심이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;3. 일정관리는 어떻게 하는가&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;일정 수준의 백로그가 쌓이면 PM은 과제 리스트를 작성한다.&lt;/li&gt;
&lt;li&gt;짧으면 분기, 길면 반기 단위로 대청소하듯 작업하는 경우가 많은데, 아래 5단계를 따라간다.&lt;/li&gt;
&lt;li&gt;과제 리스트 작성 -&gt; 우선 순위 판단 -&gt; 직군별 검토 및 토론 -&gt; 담당자 지정 -&gt; WBS 배치 후 토론&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;4. 일정관리 방식&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;과제 리스트 작성
&lt;ul&gt;
&lt;li&gt;inbox에 넣어 놓은 태스크처럼 생각나는 일을 모두 쓴다.
&lt;ul&gt;
&lt;li&gt;이때 툴은 크게 상관이 없다. 엑셀이 되었던, 노션, 지라, 위키, 피그마 등 편한 툴을 사용하여 글을 쓴다.&lt;/li&gt;
&lt;li&gt;1)과제명, 2)플랫폼, 3)니즈, 4)개요, 5)상세설명 정도면 충분&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;우선 순위 판단
&lt;ol&gt;
&lt;li&gt;우선순위에 대한 판단은 PM이 1차적으로 진행하며, 확인은 유관 리더들을 전부 동석시킨 상태에서 진행한다.
&lt;ol&gt;
&lt;li&gt;이때 안건이 1)얼마나 임팩트 있는지, 2)난이도는 어떤지, 3)외부 개입 요소는 없는지와 같이 다각도로 채점하여 순위를 매긴다&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;직군별 검토 및 토론
&lt;ol&gt;
&lt;li&gt;기획팀, 디자인팀, 개발팀 별로 리더와 구성원이 현재 예측 가능 수준에서 자원 투입량을 확인한다.&lt;/li&gt;
&lt;li&gt;최초 작성이 끝나면 PM은 담당자를 만나, 작성 근거와 설명을 경청한다.&lt;/li&gt;
&lt;li&gt;이때는 다그치는 분위기가 아니라, 도와주려는 자세로 경청한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;담당자 지정
&lt;ol&gt;
&lt;li&gt;투입 자원을 검토하여 담당자를 지정한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;WBS 배치 후 토론
&lt;ol&gt;
&lt;li&gt;담당자 지정이 끝났다면 WBS(Work Breakdown Structure)를 작성한다.&lt;/li&gt;
&lt;li&gt;WBS 작성 시에는 프로젝트 별 1)우선순위, 2)필요한 일정, 3)담당자 리소스를 고려하여 순서를 배치&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;5. 일정관리를 잘하려면&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;PM은 아래 4가지를 늘 신경 써야 WBS 과정이 순조로워진다.&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;동료 파악, 2) 신뢰 조성, 3) 목표 및 결과 공유, 4) 유연한 업무방식&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;동료 파악
&lt;ol&gt;
&lt;li&gt;PM은 동료들을 잘 알아야 한다. 무슨 일을 해왔는지, 지금 하고 있는 과제는 무엇이고, 캐파는 얼마나 확보되어 있는지, 업무성향은 어떤지&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;신뢰 조성
&lt;ol&gt;
&lt;li&gt;PM은 조직 내 신뢰를 조성해야 한다. &lt;strong&gt;스스로는 엄격하게, 동료에게는 관대하게&lt;/strong&gt;가 키포인트다.&lt;/li&gt;
&lt;li&gt;동료들과 신뢰관계에 금이 가면 일정관리 &apos;버퍼&apos;가 생긴다.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;목표 및 결과 공유
&lt;ol&gt;
&lt;li&gt;PM은 사업 목표를 끊임없이 공유해야 한다.
&lt;ol&gt;
&lt;li&gt;재무적인 상황, 경쟁 환경 등을 개발팀에도 적극 공유하여, 간접적으로나마 이해를 돕는다.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;프로젝트가 끝날때마다 목표를 달성했는지 회고하는 것도 중요하다.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;유연한 업무 방식
&lt;ol&gt;
&lt;li&gt;PM은 업무 방식을 유연하게 선택한다.&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item></channel></rss>